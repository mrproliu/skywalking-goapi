syntax = "proto3";

package satellite.envoy.accesslog.v3;

import "envoy/service/accesslog/v3/als.proto";

option java_package = "org.apache.skywalking.satellite.envoy.accesslog.v3";
option java_outer_classname = "SatelliteAlsProto";
option java_multiple_files = true;
option java_generic_services = true;
option go_package = "github.com/mrproliu/skywalking-goapi/satellite/envoy/accesslog/v3";

// [#protodoc-title: gRPC Access Log Service (ALS)]

// Service for streaming access logs from Envoy to an access log server.
service SatelliteAccessLogService {
  // Envoy will connect and send StreamAccessLogsMessage messages forever. It does not expect any
  // response to be sent as nothing would be done in the case of failure. The server should
  // disconnect if it expects Envoy to reconnect. In the future we may decide to add a different
  // API for "critical" access logs in which Envoy will buffer access logs for some period of time
  // until it gets an ACK so it could then retry. This API is designed for high throughput with the
  // expectation that it might be lossy.
  rpc StreamAccessLogs(stream .envoy.service.accesslog.v3.StreamAccessLogsMessage) returns (.envoy.service.accesslog.v3.StreamAccessLogsResponse) {
  }
}
